#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author: szkm330
# @Date:   2021-02-18 16:25:32

'''
1.运行lrc_to_ass.py
2.记事本另存output.ass为ANSI
3.aegisub另存一次ass
'''

# 设置弹幕区
right = '852'
left = '320'

# 弹幕高度池
high = [65,95,125,155,185,215,245,275,305,335]
n = 0

# 写入ass文件头
info = """
[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 852
PlayResY: 480

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,霞鹜文楷,30,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,0,1,10,10,10,1
Style: TALK,霞鹜文楷,35,&H00FFFFFF,&H000000FF,&H004B164D,&H00000000,-1,0,0,0,100,100,0,0,1,2,0,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
"""
ass = open("output.ass","w",encoding = "utf-8")
ass.write(info)
ass.close()


# lrc转换ass
lrc = open("input.lrc","r",encoding = "utf-8")
ass = open("output.ass","a",encoding = "utf-8")

for line in lrc:

    time = line.split(']')[0][1:]
    time = time.split(':')
    time[0] = str(int(time[0]))
    time[2] = time[2][:-1]
    # 获取起始时间
    time0 = '{}:{}:{}'.format(time[0],time[1],time[2])
    # 时间进位计算
    time[0] = int(time[0])
    time[1] = int(time[1])
    time[2] = float(time[2])+5
    if time[2] < 10:
        time[2] = '0' + str(time[2])
    elif time[2] >= 60:
        time[2] = round((time[2]-60),2)
        if time[2] < 10:
            time[2] = '0' + str(time[2])
        else:
            time[2] = str(time[2])
        time[1] = time[1] + 1
    if time[1] < 10:
        time[1] = '0' + str(time[1])
    elif time[1] >= 60:
        time[1] = time[1] - 60
        time[0] = time[0] + 1
        if time[1] < 10:
            time[1] = '0' + str(time[1])
        else:
            time[1] = str(time[1])
    # 获取结束时间
    time1 = '{}:{}:{}'.format(time[0],time[1],time[2])
    # 获取弹幕内容
    comment = line.split(']')[1].split()
    # 若内容里有空格
    if isinstance(comment,list):
        comment = line.split(']')[1].split()[1:]
        comment = ' '.join(comment)
    # 按顺序轮流设置高度
    pos = high[n]
    n = n + 1
    if n >= 10:
        n = 0

    # 得到最终语句
    end = 'Dialogue: 0,{},{},Default,,0,0,0,,{{\move({},{},{},{})}}{}'.format(
           time0,time1,right,pos,left,pos,comment)
    ass.write('{}\n'.format(end))

# 结束
lrc.close()
ass.close()
